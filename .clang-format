# https://clang.llvm.org/docs/ClangFormatStyleOptions.html
---
Language:        Cpp
AccessModifierOffset: -4

AlignAfterOpenBracket: Align
AlignArrayOfStructures: Left
AlignConsecutiveMacros: 
  Enabled: true
  AcrossEmptyLines: true
  AcrossComments: true
AlignConsecutiveAssignments: 
  Enabled: true
  AcrossEmptyLines: true
  AcrossComments: true
  AlignCompound: true
  PadOperators: true
AlignConsecutiveBitFields: 
  Enabled: true
  AcrossEmptyLines: true
  AcrossComments: true
AlignConsecutiveDeclarations: 
  Enabled: false
  AcrossEmptyLines: true
  AcrossComments: true
AlignEscapedNewlines: Left
AlignOperands: AlignAfterOperator
AlignTrailingComments: true

AllowAllArgumentsOnNextLine: false # TESTME
AllowAllParametersOfDeclarationOnNextLine: false # TESTME
AllowShortEnumsOnASingleLine: false
AllowShortBlocksOnASingleLine: Empty # 'Always' is also fine
AllowShortCaseLabelsOnASingleLine: true
AllowShortFunctionsOnASingleLine: Empty
AllowShortLambdasOnASingleLine: Empty
AllowShortIfStatementsOnASingleLine: Never
AllowShortLoopsOnASingleLine: true # TESTME

# AlwaysBreakAfterDefinitionReturnType: All #-> This option is deprecated and is retained for backwards compatibility.
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: true # TESTME
AlwaysBreakTemplateDeclarations: Yes

# AttributeMacros:  # Defines list of attribute macros  CAN BE IMPORTANT LATER!!!
#   - __capability

BinPackArguments: true
BinPackParameters: true
BitFieldColonSpacing: Both

BreakBeforeBraces: Custom
BraceWrapping:  # Works only if 'BreakBeforeBraces' have value of 'Custom'
  AfterCaseLabel:  false
  AfterClass:      false
  AfterControlStatement: Never
  AfterEnum:       false
  AfterFunction:   false
  AfterNamespace:  false
  # AfterObjCDeclaration: false # Not using ObjC
  AfterStruct:     false
  AfterUnion:      false
  AfterExternBlock: false
  BeforeCatch:     true
  BeforeElse:      true
  BeforeLambdaBody: false
  BeforeWhile:     false
  IndentBraces:    false
  SplitEmptyFunction: false # Unnecessary
  SplitEmptyRecord: false # Unnecessary
  SplitEmptyNamespace: false # Unnecessary

# BreakAfterAttributes: Always # Not using
# BreakArrays: false # clang-format 16!
BreakBeforeBinaryOperators: None
BreakBeforeConceptDeclarations: Never
# BreakBeforeInlineASMColon: Never # clang-format 16!
# BreakBeforeInheritanceComma: false # No entry in docs
BreakInheritanceList: AfterComma # 'BeforeColon' is also fine
BreakBeforeTernaryOperators: true
# BreakConstructorInitializersBeforeComma: false # No entry in docs
BreakConstructorInitializers: BeforeColon
# BreakAfterJavaFieldAnnotations: false # Not using
BreakStringLiterals: true # TESTME

ColumnLimit: 0 # TESTME
# CommentPragmas:  '^ IWYU pragma:' # A regular expression that describes comments with special meaning, which should not be split into lines or otherwise changed.

QualifierAlignment: Custom
QualifierOrder: ['constexpr', 'inline', 'static', 'const', 'type', 'volatile', 'restrict']

CompactNamespaces: false
ConstructorInitializerIndentWidth: 4 # TESTME
ContinuationIndentWidth: 4 # TESTME
Cpp11BracedListStyle: true # TESTME
# DeriveLineEnding: true # This option is deprecated.
DerivePointerAlignment: false

DisableFormat:   false # <--- IMPORTANT!!!

EmptyLineAfterAccessModifier: Never
EmptyLineBeforeAccessModifier: Always
ExperimentalAutoDetectBinPacking: false # TESTME
PackConstructorInitializers: Never
BasedOnStyle: '' # Can have values of LLVM, Google, Chromium, Mozilla, WebKit, Microsoft, GNU or InheritParentConfig
# ConstructorInitializerAllOnOneLineOrOnePerLine: false # deprecated
# AllowAllConstructorInitializersOnNextLine: true # deprecated

FixNamespaceComments: true
ForEachMacros:
  - foreach
  - Q_FOREACH
  - BOOST_FOREACH
IfMacros:
  - KJ_IF_MAYBE

IncludeBlocks: Regroup # TESTME Can impact pch
IncludeCategories:
  - Regex:           '^"(llvm|llvm-c|clang|clang-c)/'
    Priority:        2
    SortPriority:    0
    CaseSensitive:   false
  - Regex:           '^(<|"(gtest|gmock|isl|json)/)'
    Priority:        3
    SortPriority:    0
    CaseSensitive:   false
  - Regex:           '.*'
    Priority:        1
    SortPriority:    0
    CaseSensitive:   false
IncludeIsMainRegex: '(Test)?$'
IncludeIsMainSourceRegex: ''

IndentAccessModifiers: false
IndentCaseLabels: false
IndentCaseBlocks: false
IndentGotoLabels: false
IndentPPDirectives: BeforeHash
IndentExternBlock: Indent
IndentRequires:  false # This only applies when RequiresClausePosition is OwnLine, or WithFollowing.
IndentWidth: 4
IndentWrappedFunctionNames: true
InsertBraces: true # TESTME
# InsertNewlineAtEOF: true # clang-format 16!
# InsertTrailingCommas: None # For now only for JS
KeepEmptyLinesAtTheStartOfBlocks: false
LambdaBodyIndentation: Signature

MacroBlockBegin: '' # Standardization of beginning and ending of each macro
MacroBlockEnd: ''

MaxEmptyLinesToKeep: 1
NamespaceIndentation: All
# NamespaceMacros: '' # A vector of macros which are used to open namespace blocks.

# ObjCBinPackProtocolList: Auto # ObjC Config is not necessary for this project
# ObjCBlockIndentWidth: 2
# ObjCBreakBeforeNestedBlockParam: true
# ObjCSpaceAfterProperty: false
# ObjCSpaceBeforeProtocolList: true

# TESTME
PenaltyBreakAssignment: 2
PenaltyBreakBeforeFirstCallParameter: 19
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 120
PenaltyBreakOpenParenthesis: 0
PenaltyBreakString: 1000
PenaltyBreakTemplateDeclaration: 10
PenaltyExcessCharacter: 1000000
PenaltyReturnTypeOnItsOwnLine: 60
PenaltyIndentedWhitespace: 0
# END OF TESTME

PointerAlignment: Right
PPIndentWidth:   -1
ReferenceAlignment: Pointer
ReflowComments:  true
RemoveBracesLLVM: false
RequiresClausePosition: WithPreceding
SeparateDefinitionBlocks: Always
ShortNamespaceLines: 1
SortIncludes: Never
# SortJavaStaticImport: Before
SortUsingDeclarations: true
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: false
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: true
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: false
SpaceBeforeParens: Custom
SpaceBeforeParensOptions:
  AfterControlStatements: true
  AfterForeachMacros: false
  AfterFunctionDefinitionName: false
  AfterFunctionDeclarationName: false
  AfterIfMacros: true
  AfterOverloadedOperator: false
  AfterRequiresInClause: true
  AfterRequiresInExpression: false
  BeforeNonEmptyParentheses: false
SpaceAroundPointerQualifiers: Default
SpaceBeforeRangeBasedForLoopColon: true
SpaceInEmptyBlock: false
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 1
SpacesInAngles:  Never
SpacesInConditionalStatement: false
SpacesInContainerLiterals: false
SpacesInCStyleCastParentheses: false
SpacesInLineCommentPrefix:
  Minimum:         1
  Maximum:         -1
SpacesInParentheses: false
SpacesInSquareBrackets: false
SpaceBeforeSquareBrackets: false

Standard: Latest
StatementAttributeLikeMacros:
  - Q_EMIT
StatementMacros:
  - Q_UNUSED
  - QT_REQUIRE_VERSION

TabWidth:        4
# UseCRLF:         false # This option is deprecated.
UseTab:          Always # TESTME
WhitespaceSensitiveMacros:
  - STRINGIZE
  - PP_STRINGIZE
  - BOOST_PP_STRINGIZE
  - NS_SWIFT_NAME
  - CF_SWIFT_NAME